// Copyright Â©2016-2023 by Richard A. Wilkes. All rights reserved.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, version 2.0. If a copy of the MPL was not distributed with
// this file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// This Source Code Form is "Incompatible With Secondary Licenses", as
// defined by the Mozilla Public License, version 2.0.

package poly_test

import (
	"testing"

	"github.com/richardwilkes/toolbox/check"
	"github.com/richardwilkes/toolbox/xmath/geom"
	"github.com/richardwilkes/toolbox/xmath/geom/poly"
	"golang.org/x/exp/constraints"
)

type containsCase[T constraints.Float] struct {
	geom.Point[T]
	contains bool
}

func TestContains(t *testing.T) {
	testContains[float32](t)
	testContains[float64](t)
}

func testContains[T constraints.Float](t *testing.T) {
	p := poly.Polygon[T]{
		{{200, 20}, {300, 20}, {300, 120}, {200, 120}},
		{{250, 50}, {280, 50}, {280, 80}, {250, 80}},
		{{260, 60}, {290, 60}, {290, 90}, {260, 90}},
		{{290, 110}, {320, 110}, {320, 140}, {290, 140}},
	}
	containsTests := []containsCase[T]{
		{Point: geom.Point[T]{X: 199, Y: 20}, contains: false},
		{Point: geom.Point[T]{X: 200, Y: 20}, contains: true},
		{Point: geom.Point[T]{X: 300, Y: 120}, contains: true},
		{Point: geom.Point[T]{X: 250, Y: 50}, contains: true},
		{Point: geom.Point[T]{X: 260, Y: 60}, contains: true},
		{Point: geom.Point[T]{X: 290, Y: 110}, contains: true},
		{Point: geom.Point[T]{X: 319, Y: 139}, contains: true},
		{Point: geom.Point[T]{X: 321, Y: 140}, contains: false},
		{Point: geom.Point[T]{X: 320, Y: 141}, contains: false},
	}
	for i, test := range containsTests {
		check.Equal(t, test.contains, p.Contains(test.Point), "%T contains case #%d", p, i)
	}
	containsEvenOddTests := []containsCase[T]{
		{Point: geom.Point[T]{X: 199, Y: 20}, contains: false},
		{Point: geom.Point[T]{X: 200, Y: 20}, contains: true},
		{Point: geom.Point[T]{X: 300, Y: 120}, contains: true},
		{Point: geom.Point[T]{X: 250, Y: 50}, contains: false},
		{Point: geom.Point[T]{X: 260, Y: 60}, contains: true},
		{Point: geom.Point[T]{X: 290, Y: 110}, contains: false},
		{Point: geom.Point[T]{X: 319, Y: 139}, contains: true},
		{Point: geom.Point[T]{X: 321, Y: 140}, contains: false},
		{Point: geom.Point[T]{X: 320, Y: 141}, contains: false},
	}
	for i, test := range containsEvenOddTests {
		check.Equal(t, test.contains, p.ContainsEvenOdd(test.Point), "%T contains even/odd case #%d", p, i)
	}
}

type testCase[T constraints.Float] struct {
	name     string
	subject  poly.Polygon[T]
	clipping poly.Polygon[T]
	expected poly.Polygon[T]
}

func TestUnion(t *testing.T) {
	// testUnion[float32](t)
	testUnion[float64](t)
}

func testUnion[T constraints.Float](t *testing.T) {
	tests := []testCase[T]{
		{
			name:    "union #1",
			subject: poly.Polygon[T]{{{1, 1}, {1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{
				{{2, 1}, {2, 2}, {3, 2}, {3, 1}},
				{{1, 2}, {1, 3}, {2, 3}, {2, 2}},
				{{2, 2}, {2, 3}, {3, 3}, {3, 2}},
			},
			expected: poly.Polygon[T]{{{3, 2}, {3, 1}, {1, 1}, {1, 2}, {1, 3}, {3, 3}}},
		},
		{
			name:     "union #2",
			subject:  poly.Polygon[T]{{{2, 1}, {1, 2}, {2, 2}}},
			clipping: poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 3}, {1, 2}, {2, 2}, {2, 3}}},
			expected: poly.Polygon[T]{{{2, 1}, {1, 2}, {2, 2}}},
		},
		{
			name:    "union #3",
			subject: poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{
				{{2, 1}, {2, 2}, {3, 2}},
				{{1, 2}, {2, 3}, {2, 2}},
				{{2, 2}, {2, 3}, {3, 2}},
			},
			expected: poly.Polygon[T]{{{3, 2}, {2, 1}, {1, 2}, {2, 3}}},
		},
		{
			name:    "union #4",
			subject: poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{
				{{1, 2}, {2, 3}, {2, 2}},
				{{2, 2}, {2, 3}, {3, 2}},
			},
			expected: poly.Polygon[T]{{{3, 2}, {2, 2}, {2, 1}, {1, 2}, {2, 3}}},
		},
		{
			name:     "union #5",
			subject:  poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{{{1, 2}, {2, 3}, {2, 2}, {2, 3}, {3, 2}}},
			expected: poly.Polygon[T]{{{3, 2}, {2, 2}, {2, 1}, {1, 2}, {2, 3}}},
		},
		{
			name:    "union #6",
			subject: poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{
				{{2, 1}, {2, 2}, {2, 3}, {3, 2}},
				{{1, 2}, {2, 3}, {2, 2}},
			},
			expected: poly.Polygon[T]{{{3, 2}, {2, 1}, {1, 2}, {2, 3}}},
		},
		{
			name:     "union #7",
			subject:  poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 1}}},
			clipping: poly.Polygon[T]{{{1, 2}, {2, 2}, {2, 3}, {1, 2}, {2, 2}, {2, 3}}},
			expected: poly.Polygon[T]{{{2, 1}, {1, 2}, {2, 2}}},
		},
		{
			name:     "union #8",
			subject:  poly.Polygon[T]{{{160.094495, 200.379924}, {90.094495, 200.379924}, {55.094495, 139.758145}, {90.094495, 79.136367}}},
			clipping: poly.Polygon[T]{{{82.846611, 131.518814}, {66.592063, 159.672517}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
			expected: poly.Polygon[T]{{{90.094495, 79.136367}, {55.094495, 139.758145}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
		},
		{
			name:     "union #9",
			subject:  poly.Polygon[T]{{{70.784326, -7.668842}, {42.500055, -19.384571}, {22.504998, -11.102347}, {14.215784, -7.668842}, {2.500055, 20.615429}, {4.16327, 24.630785}, {-16.38653, 33.14279}, {-28.102259, 61.427062}}},
			clipping: poly.Polygon[T]{{{22.504998, -11.102347}, {14.215784, -7.668842}, {2.500055, 20.615429}, {4.16327, 24.630785}, {-16.38653, 33.14279}, {-18.453791, 38.1336}, {-23.270337, 26.505431}, {16.729663, -13.494569}, {45.013935, -1.778841}, {22.504998, -11.102347}}},
			expected: poly.Polygon[T]{{{70.784326, -7.668842}, {42.500055, -19.384571}, {22.504998, -11.102347}, {16.729663, -13.494569}, {-23.270337, 26.505431}, {-18.453791, 38.1336}, {-28.102259, 61.427062}}},
		},
		{
			name:     "union #10",
			subject:  poly.Polygon[T]{{{24, 7}, {36, 7}, {36, 23}, {24, 23}}},
			clipping: poly.Polygon[T]{{{24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {23.163772, 22.956175}, {22.336706, 22.825181}, {21.527864, 22.608452}, {20.746107, 22.308364}, {20, 21.928203}, {19.297718, 21.472136}, {18.646955, 20.945159}, {18.054841, 20.353045}, {17.527864, 19.702282}, {17.071797, 19}, {16.691636, 18.253893}, {16.391548, 17.472136}, {16.174819, 16.663294}, {16.043825, 15.836228}, {16, 15}, {16.043825, 14.163772}, {16.174819, 13.336706}, {16.391548, 12.527864}, {16.691636, 11.746107}, {17.071797, 11}, {17.527864, 10.297718}, {18.054841, 9.646955}, {18.646955, 9.054841}, {19.297718, 8.527864}, {20, 8.071797}, {20.746107, 7.691636}, {21.527864, 7.391548}, {22.336706, 7.174819}, {23.163772, 7.043825}}},
			expected: poly.Polygon[T]{{{36, 7}, {24, 7}, {23.163772, 7.043825}, {22.336706, 7.174819}, {21.527864, 7.391548}, {20.746107, 7.691636}, {20, 8.071797}, {19.297718, 8.527864}, {18.646955, 9.054841}, {18.054841, 9.646955}, {17.527864, 10.297718}, {17.071797, 11}, {16.691636, 11.746107}, {16.391548, 12.527864}, {16.174819, 13.336706}, {16.043825, 14.163772}, {16, 15}, {16.043825, 15.836228}, {16.174819, 16.663294}, {16.391548, 17.472136}, {16.691636, 18.253893}, {17.071797, 19}, {17.527864, 19.702282}, {18.054841, 20.353045}, {18.646955, 20.945159}, {19.297718, 21.472136}, {20, 21.928203}, {20.746107, 22.308364}, {21.527864, 22.608452}, {22.336706, 22.825181}, {23.163772, 22.956175}, {24, 23}, {36, 23}}},
		},
		{
			name:     "union #11",
			subject:  poly.Polygon[T]{{{160.094495, 200.379924}, {90.094495, 200.379924}, {55.094495, 139.758146}, {90.094495, 79.136368}}},
			clipping: poly.Polygon[T]{{{82.846611, 131.518814}, {66.592063, 159.672518}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
			expected: poly.Polygon[T]{{{90.094495, 79.136368}, {55.094495, 139.758146}, {66.592063, 159.672518}, {66.592063, 159.672518}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
		},
		{
			name:     "union #12",
			subject:  poly.Polygon[T]{{{2.500055, 20.615429}, {42.500055, -19.384571}, {82.500055, 20.615429}, {42.500055, 60.615429}}},
			clipping: poly.Polygon[T]{{{7.604714, 25.720088}, {32.55986, 50.675234}, {36.852887, 46.382207}, {11.897741, 21.427062}}},
			expected: poly.Polygon[T]{{{82.500055, 20.615429}, {42.500055, -19.384571}, {2.500055, 20.615429}, {7.604714, 25.720088}, {7.604714, 25.720088}, {32.55986, 50.675234}, {42.500055, 60.615429}}},
		},
		{
			name:     "union overlapping segments #1",
			subject:  poly.Polygon[T]{{{0, 0}, {10, 0}, {0, 10}}},
			clipping: poly.Polygon[T]{{{6, 5}, {6, 4}, {5, 5}}},
			expected: poly.Polygon[T]{{{5, 5}, {6, 5}, {6, 4}, {10, 0}, {0, 0}, {0, 10}}},
		},
		{
			name:     "union overlapping segments #2",
			subject:  poly.Polygon[T]{{{0, 0}, {10, 0}, {0, 10}}},
			clipping: poly.Polygon[T]{{{6, 4}, {4, 5}, {5, 5}}},
			expected: poly.Polygon[T]{{{5, 5}, {6, 4}, {10, 0}, {0, 0}, {0, 10}}},
		},
		{
			name:     "union overlapping segments #3",
			subject:  poly.Polygon[T]{{{0, 10}, {10, 10}, {0, 0}}},
			clipping: poly.Polygon[T]{{{6, 5}, {6, 6}, {5, 5}}},
			expected: poly.Polygon[T]{{{6, 6}, {6, 5}, {5, 5}, {0, 0}, {0, 10}, {10, 10}}},
		},
		{
			name:     "union overlapping segments #4",
			subject:  poly.Polygon[T]{{{0, 10}, {10, 10}, {0, 0}}},
			clipping: poly.Polygon[T]{{{5, 5}, {5, 6}, {6, 6}}},
			expected: poly.Polygon[T]{{{6, 6}, {5, 5}, {0, 0}, {0, 10}, {10, 10}}},
		},
		{
			name:     "union overlapping segments #5",
			subject:  poly.Polygon[T]{{{40131, 8372}, {40127, 8374}, {40126, 8375}, {40125, 8375}, {40122, 8377}, {40143, 8369}}},
			clipping: poly.Polygon[T]{{{40106, 8376}, {40128, 8373}, {40126, 8375}}},
			expected: poly.Polygon[T]{{{40143, 8369}, {40131, 8372}, {40127, 8374}, {40128, 8373}, {40106, 8376}, {40124.918919, 8375.054054}, {40122, 8377}}},
		},
		{
			name: "union shared vertex #1",
			subject: poly.Polygon[T]{
				{{0, 6}, {5, 5}, {2, 10}},
				{{4, 0}, {10, 4}, {5, 5}},
			},
			clipping: poly.Polygon[T]{{{5, 5}, {10, 8}, {8, 10}}},
			expected: poly.Polygon[T]{
				{{10, 8}, {5, 5}, {8, 10}},
				{{5, 5}, {0, 6}, {2, 10}},
				{{10, 4}, {4, 0}, {5, 5}},
			},
		},
		{
			name: "union shared vertex #2",
			subject: poly.Polygon[T]{
				{{0, 6}, {5, 5}, {5, 10}},
				{{5, 0}, {10, 4}, {5, 5}},
			},
			clipping: poly.Polygon[T]{{{5, 5}, {10, 8}, {8, 10}}},
			expected: poly.Polygon[T]{
				{{10, 8}, {5, 5}, {8, 10}},
				{{5, 5}, {10, 4}, {5, 0}, {5, 5}, {0, 6}, {5, 10}},
			},
		},
		{
			name: "union shared vertex #3",
			subject: poly.Polygon[T]{
				{{0, 6}, {5, 5}, {2, 10}},
				{{6, 0}, {10, 4}, {5, 5}},
			},
			clipping: poly.Polygon[T]{{{5, 5}, {10, 8}, {8, 10}}},
			expected: poly.Polygon[T]{
				{{10, 8}, {5, 5}, {8, 10}},
				{{5, 5}, {0, 6}, {2, 10}},
				{{10, 4}, {6, 0}, {5, 5}},
			},
		},
		{
			name: "union self-intersection",
			subject: poly.Polygon[T]{
				{{0, 0}, {1, 0}, {1, 1}, {0, 1}},
				{{1, 0}, {2, 0}, {2, 1}, {1, 1}},
			},
			clipping: poly.Polygon[T]{{{0, 0.25}, {3, 0.25}, {3, 0.75}, {0, 0.75}}},
			expected: poly.Polygon[T]{{{2, 0.75}, {3, 0.75}, {3, 0.25}, {2, 0.25}, {2, 0}, {0, 0}, {0, 0.25}, {0, 0.75}, {0, 1}, {2, 1}}},
		},
	}
	for i, test := range tests {
		// We check the against the string version to avoid needing to specify more than 6 digits of precision
		check.Equal(t, test.expected.String(), test.subject.Union(test.clipping).String(), "%T test case %d (%s)", test.subject, i, test.name)
	}
}

func TestIntersect(t *testing.T) {
	// testIntersect[float32](t)
	testIntersect[float64](t)
}

func testIntersect[T constraints.Float](t *testing.T) {
	tests := []testCase[T]{
		{
			name:     "intersect #1",
			subject:  poly.Polygon[T]{{{160.094495, 200.379924}, {90.094495, 200.379924}, {55.094495, 139.758146}, {90.094495, 79.136368}}},
			clipping: poly.Polygon[T]{{{82.846611, 131.518814}, {66.592063, 159.672518}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
			expected: poly.Polygon[T]{{{82.846611, 131.518814}, {66.592063, 159.672518}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
		},
		{
			name:     "intersect #2",
			subject:  poly.Polygon[T]{{{131.595971, 287.938524}, {100, 273.205081}, {71.442478, 253.208889}, {71.442478, -53.208889}, {100, -73.205081}, {131.595971, -87.938524}}},
			clipping: poly.Polygon[T]{{{128.557522, -53.208889}, {100, -73.205081}, {100, -73.205081}, {71.442478, -53.208889}, {71.442478, 253.208889}, {100, 273.205081}, {128.557522, 253.208889}}},
			expected: poly.Polygon[T]{{{128.557522, 253.208889}, {128.557522, -53.208889}, {100, -73.205081}, {71.442478, -53.208889}, {71.442478, 253.208889}, {100, 273.205081}}},
		},
		{
			name:     "intersect #3",
			subject:  poly.Polygon[T]{{{100, 100}, {98.480775, 117.364818}, {98.480775, 82.635182}}},
			clipping: poly.Polygon[T]{{{100, 100}, {100, 99.999999}, {100, 100}, {100, 100.000001}, {100, 100}}},
			expected: poly.Polygon[T]{},
		},
		{
			name:     "intersect #4",
			subject:  poly.Polygon[T]{{{100, 100}, {98.480775, 117.364818}, {98.480775, 82.635182}}},
			clipping: poly.Polygon[T]{{{100, 100}, {100, 100}, {100, 100}, {100, 100}, {100, 100}}},
			expected: poly.Polygon[T]{},
		},
		{
			name:     "intersect #5",
			subject:  poly.Polygon[T]{{{2.500055, 20.615429}, {42.500055, -19.384571}, {82.500055, 20.615429}, {42.500055, 60.615429}}},
			clipping: poly.Polygon[T]{{{7.604714, 25.720088}, {11.897741, 21.427062}, {36.852887, 46.382207}, {32.55986, 50.675234}}},
			expected: poly.Polygon[T]{{{36.852887, 46.382207}, {11.897741, 21.427062}, {7.604714, 25.720088}, {32.55986, 50.675234}}},
		},
		{
			name:     "intersect #6",
			subject:  poly.Polygon[T]{{{300, -100}, {259.807621, 50}, {-259.807621, 50}, {-300, -100}}},
			clipping: poly.Polygon[T]{{{273.205081, 0}, {259.807621, -50}, {-259.807621, -50}, {-273.205081, -0}, {-259.807621, 50}, {259.807621, 50}}},
			expected: poly.Polygon[T]{{{273.205081, -0.000001}, {259.807621, -50}, {-259.807621, -50}, {-273.205081, -0.000001}, {-259.807621, 50}, {259.807621, 50}}},
		},
		{
			name:     "intersect #7",
			subject:  poly.Polygon[T]{{{300, -100}, {277.16386, 14.80503}, {-277.16386, 14.80503}, {-300, -100}}},
			clipping: poly.Polygon[T]{{{280.108763, 0}, {277.16386, -14.80503}, {-277.16386, -14.80503}, {-280.108763, -0}, {-277.16386, 14.80503}, {277.16386, 14.80503}, {280.108763, 0}}},
			expected: poly.Polygon[T]{{{280.108763, 0}, {277.16386, -14.80503}, {-277.16386, -14.80503}, {-280.108763, -0}, {-277.16386, 14.80503}, {277.16386, 14.80503}}},
		},
		{
			name:     "intersect #8",
			subject:  poly.Polygon[T]{{{-196.961551, 65.270364}, {-187.938524, 31.595971}, {-173.205081, 0}, {-153.208889, -28.557522}, {153.208889, -28.557522}, {173.205081, -0}, {187.938524, 31.595971}, {196.961551, 65.270364}}},
			clipping: poly.Polygon[T]{{{196.961551, -65.270364}, {187.938524, -31.595971}, {173.205081, -0}, {153.208889, 28.557522}, {-153.208889, 28.557522}, {-173.205081, -0}, {-187.938524, -31.595971}, {-196.961551, -65.270364}}},
			expected: poly.Polygon[T]{{{173.205081, 0}, {153.208889, -28.557522}, {-153.208889, -28.557522}, {-173.205081, 0}, {-153.208889, 28.557522}, {153.208889, 28.557522}}},
		},
		{
			name:     "intersect #9",
			subject:  poly.Polygon[T]{{{128.557522, 253.208889}, {100, 273.205081}, {68.404029, 287.938524}, {68.404029, -87.938524}, {100, -73.205081}, {128.557522, -53.208889}}},
			clipping: poly.Polygon[T]{{{131.595971, 287.938524}, {100, 273.205081}, {71.442478, 253.208889}, {71.442478, -53.208889}, {100, -73.205081}, {131.595971, -87.938524}}},
			expected: poly.Polygon[T]{{{100, 273.205081}, {128.557522, 253.208889}, {128.557522, -53.208889}, {100, -73.205081}, {71.442478, -53.208889}, {71.442478, 253.208889}, {100, 273.205081}}},
		},
		{
			name:     "intersect #10",
			subject:  poly.Polygon[T]{{{24, 7}, {36, 7}, {36, 23}, {24, 23}}},
			clipping: poly.Polygon[T]{{{24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {23.163772, 22.956175}, {22.336706, 22.825181}, {21.527864, 22.608452}, {20.746107, 22.308364}, {20, 21.928203}, {19.297718, 21.472136}, {18.646955, 20.945159}, {18.054841, 20.353045}, {17.527864, 19.702282}, {17.071797, 19}, {16.691636, 18.253893}, {16.391548, 17.472136}, {16.174819, 16.663294}, {16.043825, 15.836228}, {16, 15}, {16.043825, 14.163772}, {16.174819, 13.336706}, {16.391548, 12.527864}, {16.691636, 11.746107}, {17.071797, 11}, {17.527864, 10.297718}, {18.054841, 9.646955}, {18.646955, 9.054841}, {19.297718, 8.527864}, {20, 8.071797}, {20.746107, 7.691636}, {21.527864, 7.391548}, {22.336706, 7.174819}, {23.163772, 7.043825}}},
			expected: poly.Polygon[T]{{{24.836228, 22.956175}, {25.663294, 22.825181}, {26.472136, 22.608452}, {27.253893, 22.308364}, {28, 21.928203}, {28.702282, 21.472136}, {29.353045, 20.945159}, {29.945159, 20.353045}, {30.472136, 19.702282}, {30.928203, 19}, {31.308364, 18.253893}, {31.608452, 17.472136}, {31.825181, 16.663294}, {31.956175, 15.836228}, {32, 15}, {31.956175, 14.163772}, {31.825181, 13.336706}, {31.608452, 12.527864}, {31.308364, 11.746107}, {30.928203, 11}, {30.472136, 10.297718}, {29.945159, 9.646955}, {29.353045, 9.054841}, {28.702282, 8.527864}, {28, 8.071797}, {27.253893, 7.691636}, {26.472136, 7.391548}, {25.663294, 7.174819}, {24.836228, 7.043825}, {24, 7}, {24, 23}}},
		},
		{
			name:     "intersect #11",
			subject:  poly.Polygon[T]{{{1568, 360.5}, {1567.2041, 392.66965}, {1564.8181, 424.76056}, {1560.8481, 456.69424}, {1555.3038, 488.3925}, {1548.1987, 519.7778}, {1539.55, 550.7733}, {1529.3793, 581.30316}, {1517.711, 611.2927}, {1504.574, 640.6685}, {1490.0002, 669.3587}, {1474.0255, 697.2931}, {1456.689, 724.4032}, {1438.0328, 750.6228}, {1418.1029, 775.8878}, {1396.9479, 800.1361}, {1374.6196, 823.3087}, {1351.1727, 845.34863}, {1326.6646, 866.20215}, {1301.155, 885.81805}, {1274.7067, 904.14844}, {1247.3842, 921.14844}, {1219.2544, 936.7764}, {1190.3861, 950.9942}, {1160.8501, 963.7669}, {1130.7186, 975.06335}, {1100.0653, 984.8558}, {1068.9652, 993.12036}, {1037.4944, 999.83685}, {1005.73004, 1004.9888}, {973.7497, 1008.5634}, {941.6318, 1010.55225}, {909.4547, 1010.95026}, {877.2974, 1009.75653}, {845.23846, 1006.97394}, {813.3563, 1002.6093}, {781.7291, 996.67334}, {750.4341, 989.18054}, {719.548, 980.1493}, {689.14624, 969.6016}, {659.3033, 957.5634}, {630.09216, 944.064}, {601.58435, 929.1366}, {573.8496, 912.81757}, {546.95593, 895.1469}, {520.969, 876.1679}, {495.95242, 855.927}, {471.96744, 834.47363}, {449.07278, 811.86035}, {427.32446, 788.1426}, {406.77567, 763.3783}, {387.47675, 737.62805}, {369.4748, 710.95496}, {352.8141, 683.4242}, {337.53516, 655.10315}, {323.67554, 626.0613}, {311.26917, 596.3694}, {300.34625, 566.10034}, {290.93372, 535.3282}, {283.05444, 504.12817}, {276.72772, 472.57666}, {271.96918, 440.75092}, {268.79034, 408.72873}, {267.19897, 376.58856}, {267.19904, 344.409}, {268.79047, 312.26883}, {271.96948, 280.24667}, {276.72815, 248.42093}, {283.055, 216.86945}, {290.93433, 185.66945}, {300.34705, 154.89732}, {311.27002, 124.62831}, {323.67657, 94.93652}, {337.53625, 65.89465}, {352.81525, 37.5737}, {369.47614, 10.042999}, {387.47815, -16.630066}, {406.7772, -42.38022}, {427.32608, -67.14444}, {449.0745, -90.86218}, {471.96924, -113.47528}, {495.95428, -134.92856}, {520.9708, -155.16931}, {546.95764, -174.14813}, {573.8513, -191.8186}, {601.58594, -208.13745}, {630.0936, -223.06476}, {659.3047, -236.56403}, {689.1476, -248.60211}, {719.54926, -259.14972}, {750.4353, -268.18085}, {781.7303, -275.67358}, {813.3575, -281.6095}, {845.2395, -285.974}, {877.2984, -288.75653}, {909.4556, -289.95026}, {941.63257, -289.5522}, {973.7504, -287.56335}, {1005.73065, -283.98865}, {1037.495, -278.83673}, {1068.9657, -272.12024}, {1100.0657, -263.85565}, {1130.7189, -254.06323}, {1160.8503, -242.76678}, {1190.3864, -229.99414}, {1219.2544, -215.77643}, {1247.3843, -200.14844}, {1274.7067, -183.1485}, {1301.1549, -164.81818}, {1326.6643, -145.20227}, {1351.1725, -124.34885}, {1374.6194, -102.30896}, {1396.9476, -79.136505}, {1418.1025, -54.888153}, {1438.0325, -29.623291}, {1456.6886, -3.403748}, {1474.0251, 23.70633}, {1489.9999, 51.640564}, {1504.5736, 80.33066}, {1517.7107, 109.70636}, {1529.3789, 139.69579}, {1539.5498, 170.22556}, {1548.1984, 201.22096}, {1555.3036, 232.60616}, {1560.848, 264.30432}, {1564.8181, 296.23785}, {1567.204, 328.3287}}},
			clipping: poly.Polygon[T]{{{449, 399}, {400, 350}, {267, 347}, {267, -290}, {267, -290}, {1567, -290}, {1567, -291}, {1567, 1010}, {1567, 1010}, {268, 1010}, {267, 1010}, {267, 415}}},
			expected: poly.Polygon[T]{{{973.7497, 1008.5634}, {1005.73004, 1004.9888}, {1037.4944, 999.83685}, {1068.9652, 993.12036}, {1100.0653, 984.8558}, {1130.7186, 975.06335}, {1160.8501, 963.7669}, {1190.3861, 950.9942}, {1219.2544, 936.7764}, {1247.3842, 921.14844}, {1274.7067, 904.14844}, {1301.155, 885.81805}, {1326.6646, 866.20215}, {1351.1727, 845.34863}, {1374.6196, 823.3087}, {1396.9479, 800.1361}, {1418.1029, 775.8878}, {1438.0328, 750.6228}, {1456.689, 724.4032}, {1474.0255, 697.2931}, {1490.0002, 669.3587}, {1504.574, 640.6685}, {1517.711, 611.2927}, {1529.3793, 581.30316}, {1539.55, 550.7733}, {1548.1987, 519.7778}, {1555.3038, 488.3925}, {1560.8481, 456.69424}, {1564.8181, 424.76056}, {1567, 395.414727}, {1567, 325.584858}, {1564.8181, 296.23785}, {1560.848, 264.30432}, {1555.3036, 232.60616}, {1548.1984, 201.22096}, {1539.5498, 170.22556}, {1529.3789, 139.69579}, {1517.7107, 109.70636}, {1504.5736, 80.33066}, {1489.9999, 51.640564}, {1474.0251, 23.70633}, {1456.6886, -3.403748}, {1438.0325, -29.623291}, {1418.1025, -54.888153}, {1396.9476, -79.136505}, {1374.6194, -102.30896}, {1351.1725, -124.34885}, {1326.6643, -145.20227}, {1301.1549, -164.81818}, {1274.7067, -183.1485}, {1247.3843, -200.14844}, {1219.2544, -215.77643}, {1190.3864, -229.99414}, {1160.8503, -242.76678}, {1130.7189, -254.06323}, {1100.0657, -263.85565}, {1068.9657, -272.12024}, {1037.495, -278.83673}, {1005.73065, -283.98865}, {973.7504, -287.56335}, {941.63257, -289.5522}, {909.4556, -289.95026}, {877.2984, -288.75653}, {845.2395, -285.974}, {813.3575, -281.6095}, {781.7303, -275.67358}, {750.4353, -268.18085}, {719.54926, -259.14972}, {689.1476, -248.60211}, {659.3047, -236.56403}, {630.0936, -223.06476}, {601.58594, -208.13745}, {573.8513, -191.8186}, {546.95764, -174.14813}, {520.9708, -155.16931}, {495.95428, -134.92856}, {471.96924, -113.47528}, {449.0745, -90.86218}, {427.32608, -67.14444}, {406.7772, -42.38022}, {387.47815, -16.630066}, {369.47614, 10.042999}, {352.81525, 37.5737}, {337.53625, 65.89465}, {323.67657, 94.93652}, {311.27002, 124.62831}, {300.34705, 154.89732}, {290.93433, 185.66945}, {283.055, 216.86945}, {276.72815, 248.42093}, {271.96948, 280.24667}, {268.79047, 312.26883}, {267.19904, 344.409}, {267.199034, 347.004489}, {400, 350}, {449, 399}, {269.392013, 414.789713}, {271.96918, 440.75092}, {276.72772, 472.57666}, {283.05444, 504.12817}, {290.93372, 535.3282}, {300.34625, 566.10034}, {311.26917, 596.3694}, {323.67554, 626.0613}, {337.53516, 655.10315}, {352.8141, 683.4242}, {369.4748, 710.95496}, {387.47675, 737.62805}, {406.77567, 763.3783}, {427.32446, 788.1426}, {449.07278, 811.86035}, {471.96744, 834.47363}, {495.95242, 855.927}, {520.969, 876.1679}, {546.95593, 895.1469}, {573.8496, 912.81757}, {601.58435, 929.1366}, {630.09216, 944.064}, {659.3033, 957.5634}, {689.14624, 969.6016}, {719.548, 980.1493}, {750.4341, 989.18054}, {781.7291, 996.67334}, {813.3563, 1002.6093}, {845.23846, 1006.97394}, {877.2974, 1009.75653}, {883.856117, 1010}, {950.550075, 1010}}},
		},
		{
			name:     "intersect #12",
			subject:  poly.Polygon[T]{{{2.500055, 20.615429}, {42.500055, -19.384571}, {82.500055, 20.615429}, {42.500055, 60.615429}}},
			clipping: poly.Polygon[T]{{{7.604714, 25.720088}, {11.897741, 21.427062}, {36.852887, 46.382207}, {32.55986, 50.675234}}},
			expected: poly.Polygon[T]{{{36.852887, 46.382207}, {11.897741, 21.427062}, {7.604714, 25.720088}, {32.55986, 50.675234}}},
		},
		{
			name:     "intersect #13",
			subject:  poly.Polygon[T]{{{0, 10}, {0, 0}, {10, 0}, {10, 10}}},
			clipping: poly.Polygon[T]{{{0, 5}, {5, 0}, {10, 5}, {5, 10}}},
			expected: poly.Polygon[T]{{{10, 5}, {5, 0}, {0, 5}, {5, 10}}},
		},
		{
			name: "intersect self-intersection",
			subject: poly.Polygon[T]{
				{{0, 0}, {1, 0}, {1, 1}, {0, 1}},
				{{1, 0}, {2, 0}, {2, 1}, {1, 1}},
			},
			clipping: poly.Polygon[T]{{{0, 0.25}, {3, 0.25}, {3, 0.75}, {0, 0.75}}},
			expected: poly.Polygon[T]{{{2, 0.25}, {0, 0.25}, {0, 0.75}, {2, 0.75}}},
		},
	}
	for i, test := range tests {
		// We check the against the string version to avoid needing to specify more than 6 digits of precision
		check.Equal(t, test.expected.String(), test.subject.Intersect(test.clipping).String(), "%T test case %d (%s)", test.subject, i, test.name)
	}
}

func TestSubtract(t *testing.T) {
	// subtract #1, #2 and #6 currently don't match due to floating-point imprecision, so commented out for now
	// testSubtract[float32](t)
	testSubtract[float64](t)
}

func testSubtract[T constraints.Float](t *testing.T) {
	tests := []testCase[T]{
		{
			name:     "subtract #1",
			subject:  poly.Polygon[T]{{{160.094495, 200.379924}, {90.094495, 200.379924}, {55.094495, 139.758146}, {90.094495, 79.136368}}},
			clipping: poly.Polygon[T]{{{82.846611, 131.518814}, {66.592063, 159.672518}, {90.094495, 200.379924}, {160.094495, 200.379924}}},
			expected: poly.Polygon[T]{{{90.094495, 79.136368}, {55.094495, 139.758146}, {66.592063, 159.672518}, {82.846611, 131.518814}, {160.094495, 200.379924}}},
		},
		{
			name:     "subtract #2",
			subject:  poly.Polygon[T]{{{2.500055, 20.615429}, {42.500055, -19.384571}, {82.500055, 20.615429}, {42.500055, 60.615429}}},
			clipping: poly.Polygon[T]{{{7.604714, 25.720088}, {32.55986, 50.675234}, {36.852887, 46.382207}, {11.897741, 21.427062}}},
			expected: poly.Polygon[T]{{{82.500055, 20.615429}, {42.500055, -19.384571}, {2.500055, 20.615429}, {7.604714, 25.720088}, {11.897741, 21.427062}, {36.852887, 46.382207}, {32.55986, 50.675234}, {42.500055, 60.615429}}},
		},
		{
			name:     "subtract #3",
			subject:  poly.Polygon[T]{{{38.572124, 172.339556}, {40, 171.339746}, {41.579799, 170.603074}, {43.263518, 170.151922}, {45, 170}, {46.736482, 170.151922}, {48.420201, 170.603074}, {50, 171.339746}, {51.427876, 172.339556}}},
			clipping: poly.Polygon[T]{{{51.427876, 172.339556}, {50, 171.339746}, {48.420201, 170.603074}, {46.736482, 170.151922}, {45, 170}, {43.263518, 170.151922}, {42.781168, 170.281168}, {42.651922, 170.763518}, {42.5, 172}}},
			expected: poly.Polygon[T]{{{42.5, 172}, {42.651922, 170.763518}, {42.781168, 170.281168}, {43.263518, 170.151922}, {41.579799, 170.603074}, {40, 171.339746}, {38.572124, 172.339556}, {51.427876, 172.339556}}},
		},
		{
			name:     "subtract #4",
			subject:  poly.Polygon[T]{{{24, 7}, {36, 7}, {36, 23}, {24, 23}}},
			clipping: poly.Polygon[T]{{{24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {23.163772, 22.956175}, {22.336706, 22.825181}, {21.527864, 22.608452}, {20.746107, 22.308364}, {20, 21.928203}, {19.297718, 21.472136}, {18.646955, 20.945159}, {18.054841, 20.353045}, {17.527864, 19.702282}, {17.071797, 19}, {16.691636, 18.253893}, {16.391548, 17.472136}, {16.174819, 16.663294}, {16.043825, 15.836228}, {16, 15}, {16.043825, 14.163772}, {16.174819, 13.336706}, {16.391548, 12.527864}, {16.691636, 11.746107}, {17.071797, 11}, {17.527864, 10.297718}, {18.054841, 9.646955}, {18.646955, 9.054841}, {19.297718, 8.527864}, {20, 8.071797}, {20.746107, 7.691636}, {21.527864, 7.391548}, {22.336706, 7.174819}, {23.163772, 7.043825}}},
			expected: poly.Polygon[T]{{{36, 7}, {24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {36, 23}}},
		},
		{
			name:     "subtract #5",
			subject:  poly.Polygon[T]{{{114, 0}, {161, 0}, {114, 168}}},
			clipping: poly.Polygon[T]{{{99, 164}, {114, 108}, {121, 164}}},
			expected: poly.Polygon[T]{
				{{115.119048, 164}, {114, 164}, {114, 168}},
				{{161, 0}, {114, 0}, {114, 108}, {119.183824, 149.470588}},
			},
		},
		{
			name:     "subtract #6",
			subject:  poly.Polygon[T]{{{426694.636527, -668547.161158}, {426714.57523, -668548.923865}, {426745.396481, -668550.465125}}},
			clipping: poly.Polygon[T]{{{426714.57523, -668548.923865}, {426744.637187, -668550.05919}, {426745.396482, -668550.465224}}},
			expected: poly.Polygon[T]{
				{{426731.589524, -668549.56643}, {426714.57523, -668548.923865}, {426694.636527, -668547.161158}},
				{{426745.396481, -668550.465125}, {426745.396278, -668550.465115}, {426745.396271, -668550.465111}},
			},
		},
		{
			name:     "subtract #7",
			subject:  poly.Polygon[T]{{{38.572124, 172.339556}, {40, 171.339746}, {41.579799, 170.603074}, {43.263518, 170.151922}, {45, 170}, {46.736482, 170.151922}, {48.420201, 170.603074}, {50, 171.339746}, {51.427876, 172.339556}}},
			clipping: poly.Polygon[T]{{{51.427876, 172.339556}, {50, 171.339746}, {48.420201, 170.603074}, {46.736482, 170.151922}, {45, 170}, {43.263518, 170.151922}, {42.781168, 170.281168}, {42.651922, 170.763518}, {42.5, 172}}},
			expected: poly.Polygon[T]{{{42.5, 172}, {42.651922, 170.763518}, {42.781168, 170.281168}, {43.263518, 170.151922}, {41.579799, 170.603074}, {40, 171.339746}, {38.572124, 172.339556}, {51.427876, 172.339556}}},
		},
		{
			name: "subtract #8",
			subject: poly.Polygon[T]{
				{{0, 0}, {1, 0}, {1, 1}, {0, 1}},
				{{1, 0}, {2, 0}, {2, 1}, {1, 1}},
			},
			clipping: poly.Polygon[T]{{{0, 0.25}, {3, 0.25}, {3, 0.75}, {0, 0.75}}},
			expected: poly.Polygon[T]{
				{{2, 0.75}, {0, 0.75}, {0, 1}, {2, 1}},
				{{2, 0}, {0, 0}, {0, 0.25}, {2, 0.25}},
			},
		},
		{
			name: "subtract self-intersect",
			subject: poly.Polygon[T]{
				{{0, 0}, {1, 0}, {1, 1}, {0, 1}},
				{{1, 0}, {2, 0}, {2, 1}, {1, 1}},
			},
			clipping: poly.Polygon[T]{{{0, 0.25}, {3, 0.25}, {3, 0.75}, {0, 0.75}}},
			expected: poly.Polygon[T]{
				{{2, 0.75}, {0, 0.75}, {0, 1}, {2, 1}},
				{{2, 0}, {0, 0}, {0, 0.25}, {2, 0.25}},
			},
		},
	}
	for i, test := range tests {
		// We check the against the string version to avoid needing to specify more than 6 digits of precision
		check.Equal(t, test.expected.String(), test.subject.Subtract(test.clipping).String(), "%T test case %d (%s)", test.subject, i, test.name)
	}
}

func TestXor(t *testing.T) {
	testXor[float32](t)
	testXor[float64](t)
}

func testXor[T constraints.Float](t *testing.T) {
	tests := []testCase[T]{
		{
			name:     "xor #1",
			subject:  poly.Polygon[T]{{{24, 7}, {36, 7}, {36, 23}, {24, 23}}},
			clipping: poly.Polygon[T]{{{24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {23.163772, 22.956175}, {22.336706, 22.825181}, {21.527864, 22.608452}, {20.746107, 22.308364}, {20, 21.928203}, {19.297718, 21.472136}, {18.646955, 20.945159}, {18.054841, 20.353045}, {17.527864, 19.702282}, {17.071797, 19}, {16.691636, 18.253893}, {16.391548, 17.472136}, {16.174819, 16.663294}, {16.043825, 15.836228}, {16, 15}, {16.043825, 14.163772}, {16.174819, 13.336706}, {16.391548, 12.527864}, {16.691636, 11.746107}, {17.071797, 11}, {17.527864, 10.297718}, {18.054841, 9.646955}, {18.646955, 9.054841}, {19.297718, 8.527864}, {20, 8.071797}, {20.746107, 7.691636}, {21.527864, 7.391548}, {22.336706, 7.174819}, {23.163772, 7.043825}}},
			expected: poly.Polygon[T]{
				{{36, 7}, {24, 7}, {24.836228, 7.043825}, {25.663294, 7.174819}, {26.472136, 7.391548}, {27.253893, 7.691636}, {28, 8.071797}, {28.702282, 8.527864}, {29.353045, 9.054841}, {29.945159, 9.646955}, {30.472136, 10.297718}, {30.928203, 11}, {31.308364, 11.746107}, {31.608452, 12.527864}, {31.825181, 13.336706}, {31.956175, 14.163772}, {32, 15}, {31.956175, 15.836228}, {31.825181, 16.663294}, {31.608452, 17.472136}, {31.308364, 18.253893}, {30.928203, 19}, {30.472136, 19.702282}, {29.945159, 20.353045}, {29.353045, 20.945159}, {28.702282, 21.472136}, {28, 21.928203}, {27.253893, 22.308364}, {26.472136, 22.608452}, {25.663294, 22.825181}, {24.836228, 22.956175}, {24, 23}, {36, 23}},
				{{24, 7}, {23.163772, 7.043825}, {22.336706, 7.174819}, {21.527864, 7.391548}, {20.746107, 7.691636}, {20, 8.071797}, {19.297718, 8.527864}, {18.646955, 9.054841}, {18.054841, 9.646955}, {17.527864, 10.297718}, {17.071797, 11}, {16.691636, 11.746107}, {16.391548, 12.527864}, {16.174819, 13.336706}, {16.043825, 14.163772}, {16, 15}, {16.043825, 15.836228}, {16.174819, 16.663294}, {16.391548, 17.472136}, {16.691636, 18.253893}, {17.071797, 19}, {17.527864, 19.702282}, {18.054841, 20.353045}, {18.646955, 20.945159}, {19.297718, 21.472136}, {20, 21.928203}, {20.746107, 22.308364}, {21.527864, 22.608452}, {22.336706, 22.825181}, {23.163772, 22.956175}, {24, 23}},
			},
		},
		{
			name: "xor self-intersect",
			subject: poly.Polygon[T]{
				{{0, 0}, {1, 0}, {1, 1}, {0, 1}},
				{{1, 0}, {2, 0}, {2, 1}, {1, 1}},
			},
			clipping: poly.Polygon[T]{{{0, 0.25}, {3, 0.25}, {3, 0.75}, {0, 0.75}}},
			expected: poly.Polygon[T]{
				{{2, 0.75}, {3, 0.75}, {3, 0.25}, {2, 0.25}, {2, 0.75}, {0, 0.75}, {0, 1}, {2, 1}},
				{{2, 0}, {0, 0}, {0, 0.25}, {2, 0.25}},
			},
		},
	}
	for i, test := range tests {
		// We check the against the string version to avoid needing to specify more than 6 digits of precision
		check.Equal(t, test.expected.String(), test.subject.Xor(test.clipping).String(), "%T test case %d (%s)", test.subject, i, test.name)
	}
}
